<?xml version='1.0' encoding='utf-8'?>

<!--
 *
 * Copyright (c) 2019 IBM Corporation and others
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * You may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
-->

<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <properties>
        <maven.compiler.target>11</maven.compiler.target>
        <maven.compiler.source>11</maven.compiler.source>
        <version.maven-war-plugin>3.3.1</version.maven-war-plugin>
        <version.maven-surefire-plugin>3.0.0-M1</version.maven-surefire-plugin>
        <version.maven-failsafe-plugin>3.0.0-M1</version.maven-failsafe-plugin>
        <maven.failsafe.debug>true</maven.failsafe.debug>
        <http.port>9080</http.port>
        <https.port>9443</https.port>
        <version.liberty-maven-plugin>3.2</version.liberty-maven-plugin>
    </properties>

    <groupId>dev.odo.starter.java-openliberty</groupId>
    <artifactId>jpa-starter-app</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <dependencies>
        <!-- Aggregate of MicroProfile APIs -->
        <dependency>
            <groupId>org.eclipse.microprofile</groupId>
            <artifactId>microprofile</artifactId>
            <version>3.3</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
        <!-- For tests -->
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>8.0.1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.microshed</groupId>
			<artifactId>microshed-testing-liberty</artifactId>
			<version>0.9</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.29</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>5.6.0</version>
			<scope>test</scope>
		</dependency>
                <dependency>
                   <groupId>org.postgresql</groupId>
                   <artifactId>postgresql</artifactId>
                   <version>42.1.1</version>
                </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.21</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-rs-client</artifactId>
            <version>3.2.6</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-rs-extension-providers</artifactId>
            <version>3.2.6</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <version>1.0.4</version>
            <scope>test</scope>
        </dependency>
        <!-- Support for JDK 9 and above -->
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-core</artifactId>
            <version>2.3.0.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <version>2.3.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
            <version>1.1.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

	<profiles>
        <profile>
			<id>fabric</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>fabric</name>
				</property>
			</activation>
            <properties>
                        <liberty.defaultVar.DATABASE_CLUSTERIP>localhost</liberty.defaultVar.DATABASE_CLUSTERIP>
        <liberty.defaultVar.POSTGRES_PORT>5432</liberty.defaultVar.POSTGRES_PORT>
        <liberty.defaultVar.DATABASE_DB_USER>test</liberty.defaultVar.DATABASE_DB_USER>
        <liberty.defaultVar.DATABASE_DB_PASSWORD>test</liberty.defaultVar.DATABASE_DB_PASSWORD>
        <liberty.defaultVar.DATABASE_DB_NAME>sampledb</liberty.defaultVar.DATABASE_DB_NAME>
    </properties>

			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.34.1</version>
						<configuration>
							<logDate>none</logDate>
							<images>
								<image>
									<alias>db</alias>
									<name>postgres:9.6.0</name>
									<run>
										<cmd>-c max_prepared_transactions=30</cmd>
										<namingStrategy>none</namingStrategy>
										<env>
                                            <POSTGRES_USER>${liberty.defaultVar.DATABASE_DB_USER}</POSTGRES_USER>
                                            <POSTGRES_PASSWORD>${liberty.defaultVar.DATABASE_DB_PASSWORD}</POSTGRES_PASSWORD>
                                            <POSTGRES_DB>${liberty.defaultVar.DATABASE_DB_NAME}</POSTGRES_DB>
										</env>
										<ports>
                                            <!-- maybe should just dflt to 5432 -->
											<port>${liberty.defaultVar.POSTGRES_PORT}:${liberty.defaultVar.POSTGRES_PORT}</port>
										</ports>
										<log>
											<prefix>postgres</prefix>
											<enabled>true</enabled>
											<color>yellow</color>
										</log>
										<wait>
											<time>30000</time> <!-- 30 seconds max -->
											<log>.*database system is ready to accept connections</log>
										</wait>
									</run>
								</image>
								<!-- <image> <alias>web</alias> <name>jboss/wildfly:9.0.2.Final</name> 
									<run> <links> <link>db,db2</link> </links> <ports> <port>web.port:8080</port> 
									</ports> <wait> <log>WildFly Full .* \(WildFly Core .*\) started</log> </wait> 
									</run> </image> -->
							</images>
						</configuration>
						<executions>
							<execution>
								<id>start</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>stop</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>
	</profiles>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <id>copy-resource-adapter-artifacts</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/liberty/wlp/usr/shared/resources</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <excludeTransitive>true</excludeTransitive>
                            <includeTypes>jar</includeTypes>
                            <includeGroupIds>mysql,org.postgresql</includeGroupIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${version.maven-war-plugin}</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <packagingExcludes>pom.xml</packagingExcludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
            </plugin>
            <!-- Enable liberty-maven plugin -->
            <plugin>
                <groupId>io.openliberty.tools</groupId>
                <artifactId>liberty-maven-plugin</artifactId>
                <version>${version.liberty-maven-plugin}</version>
                <configuration>
                    <stripVersion>true</stripVersion>
                    <serverStartTimeout>360</serverStartTimeout>
                    <bootstrapProperties>
                        <default.http.port>${http.port}</default.http.port>
                        <default.https.port>${https.port}</default.https.port>
				<!-- <app.context.root>${app.name}</app.context.root> -->
                    </bootstrapProperties>
                </configuration>
            </plugin>
            <!-- Plugin to run unit tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${version.maven-surefire-plugin}</version>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <id>default-test</id>
                        <configuration>
                            <excludes>
                                <exclude>**/it/**</exclude>
                            </excludes>
                            <reportsDirectory>
                                ${project.build.directory}/test-reports/unit
                            </reportsDirectory>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <skipTests>${skipTests}</skipTests>
                </configuration>
            </plugin>
            <!-- Plugin to run functional tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${version.maven-failsafe-plugin}</version>
                <executions>
                    <execution>
                        <phase>integration-test</phase>
                        <id>it-exec</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/it/**</include>
                            </includes>
                            <systemPropertyVariables>
                                <liberty.test.port>${http.port}</liberty.test.port>
				<war.name>${app.name}</war.name>
                                <microshed_manual_env>true</microshed_manual_env>	
					                      <microshed_hostname>localhost</microshed_hostname>
                                <microshed_http_port>9080</microshed_http_port>
					
<microshed_https_port>-1</microshed_https_port>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                    <execution>
                        <id>verify-results</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <summaryFile>
                        ${project.build.directory}/test-reports/it/failsafe-summary.xml
                    </summaryFile>
                    <reportsDirectory>
                        ${project.build.directory}/test-reports/it
                    </reportsDirectory>
		    <systemPropertyVariables>
			        <microshed_manual_env>true</microshed_manual_env>
				<microshed_hostname>localhost</microshed_hostname>
				<microshed_http_port>9080</microshed_http_port>
					
              <microshed_https_port>-1</microshed_https_port>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
